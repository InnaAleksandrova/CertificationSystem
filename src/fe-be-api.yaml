{
  "openapi": "3.0.1",
  "info": {
    "title": "Certification API"
  },
  "paths": {
    "/api/certificate/applicable-kind-types": {
      "post": {
        "tags": [
          "Certificate"
        ],
        "summary": "Получить подходящие виды-типы сертификатов",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeKindCertificateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TypeKindCertificateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TypeKindCertificateRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicablePairsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicablePairsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicablePairsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificate/applicable-kind-types/{packageId}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "Получить подходящие виды-типы сертификатов по идентификатору пакета",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicablePairsDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicablePairsDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicablePairsDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificate/download/{packageId}": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "Получить сертификат для печати",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificate/download/{packageId}/view": {
      "get": {
        "tags": [
          "Certificate"
        ],
        "summary": "Получить сертификат для просмотра",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/clients": {
      "get": {
        "tags": [
          "ClientsApi"
        ],
        "summary": "Получение списка клиентов",
        "parameters": [
          {
            "name": "clientType",
            "in": "query",
            "description": "Тип клиента\n\nIndividual\n\nLegal",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/ClientTypeEnum"
            },
            "x-enumNames": [
              "Individual",
              "Legal"
            ],
            "x-enumDescriptions": [
              "",
              ""
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDetails"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDetails"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/certification-systems": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Системы сертификации",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CertificationSystemEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CertificationSystemEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CertificationSystemEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/certification-types": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Типы сертификатов",
        "description": "Доступные типы сертификатов с учётом типов пакетов",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CertificationTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CertificationTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/CertificationTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/client-types": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Типы клиентов",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ClientTypeEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ClientTypeEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/ClientTypeEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-clarity-gia": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Чистота GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondClarityGiaEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondClarityGiaEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondClarityGiaEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-clarity-ru": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Чистота РФ.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondClarityRuEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondClarityRuEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondClarityRuEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-color-gia": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Цвет GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondColorGiaEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondColorGiaEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondColorGiaEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-color-ru": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Цвет РФ.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondColorRuEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondColorRuEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondColorRuEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-culet-inter-system": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Калетта РФ/GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCuletRuEnumDiamondCuletGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCuletRuEnumDiamondCuletGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCuletRuEnumDiamondCuletGiaEnumInterSystemCategorizerItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-cut-inter-system": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Огранка РФ/GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCutRuEnumDiamondCutGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCutRuEnumDiamondCutGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCutRuEnumDiamondCutGiaEnumInterSystemCategorizerItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-cut-style-gia": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Стиль огранки GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCutStyleGiaEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCutStyleGiaEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondCutStyleGiaEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-defects": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Дефекты с классификацией (внутренний/внешний).",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondDefectLookupItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondDefectLookupItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondDefectLookupItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-fantasy-color-gia": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Цвет GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DiamondFantasyColorGiaLookupDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiamondFantasyColorGiaLookupDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiamondFantasyColorGiaLookupDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-fantasy-cut-shape-ru": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Фантазийные формы огранки РФ.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondFantasyCutShapeRuEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondFantasyCutShapeRuEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondFantasyCutShapeRuEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-fluorescence-inter-system": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Флуоресценция РФ/GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondFluorescenceRuEnumDiamondFluorescenceGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondFluorescenceRuEnumDiamondFluorescenceGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondFluorescenceRuEnumDiamondFluorescenceGiaEnumInterSystemCategorizerItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-polish-inter-system": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Полировка РФ/GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondPolishRuEnumDiamondPolishGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondPolishRuEnumDiamondPolishGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondPolishRuEnumDiamondPolishGiaEnumInterSystemCategorizerItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-shape-gia": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Форма. Наименование GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondShapeGiaEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondShapeGiaEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondShapeGiaEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-shape-ru": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллианты. Форма. Наименование РФ. Признак фантазийности.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondShapeRuDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondShapeRuDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondShapeRuDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/diamond-symmetry-inter-system": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Бриллинты. Симметрия РФ/GIA.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondSymmetryRuEnumDiamondSymmetryGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondSymmetryRuEnumDiamondSymmetryGiaEnumInterSystemCategorizerItem"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/DiamondSymmetryRuEnumDiamondSymmetryGiaEnumInterSystemCategorizerItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/jewelry-kinds": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Виды ювелирных изделий",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JewelryKindEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JewelryKindEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/JewelryKindEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/minerals": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Классификация видов минералов.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MineralLookupItemDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MineralLookupItemDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MineralLookupItemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/minerals-origin": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Происхождение минералов.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MineralOriginEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MineralOriginEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/MineralOriginEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/package-additional-work-scopes": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Типы дополнительных работ с пакетом",
        "description": "Доступные типы дополнительных работ с учётом типов пакетов",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AdditionalWorkScopeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AdditionalWorkScopeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/AdditionalWorkScopeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/package-containers": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Типы упаковки",
        "description": "В какой упаковке вернуть пакет заказчику",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageContainerEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageContainerEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageContainerEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/package-cuts": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Типы огранки для пакета",
        "description": "Не идёт в сертификат, нужно для трансляции в печатную форму",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageCutEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageCutEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageCutEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dictionaries/package-types": {
      "get": {
        "tags": [
          "Dictionaries"
        ],
        "summary": "Типы пакетов",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageTypeEnum"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageTypeEnum"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/PackageTypeEnum"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/package/{number}/for-engraving-shooting/by-number": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получение пакета по номеру для гравировки и фотографирования",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Номер пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/{number}/for-expertise/by-number": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получение пакета для экспертной оценки по номеру",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Номер пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/{packageId}/for-engraving-shooting": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получение пакета по номеру для гравировки и фотографирования",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/{packageId}/for-expertise": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получение пакета для экспертной оценки по номеру",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/details/{packageId}": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получить данные пакета по id",
        "description": "Пользователь хочет перейти к просмотру свойств какого-то пакета",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/details/by-number/{number}": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получить данные пакета по номеру пакета",
        "description": "Пользователь хочет перейти к просмотру свойств какого-то пакета",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/finalize/{packageId}": {
      "put": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Завершить работу с пакетом",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/list/for-engraving-shooting": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получение списка пакетов для гравировки и фотографирования",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetailsPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetailsPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetailsPagedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/list/for-expertise": {
      "get": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Получение списка пакетов для экспертной оценки",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetailsPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetailsPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageBriefDetailsPagedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/print-certification-document/{packageId}": {
      "put": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Отметка о печати сертификационного документа для пакета",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/register-certification-document": {
      "put": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Регистрация сертификационного документа для пакета",
        "requestBody": {
          "description": "Команда регистрации сертификационного документа",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCertificationDocumentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCertificationDocumentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCertificationDocumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/register-jewelry": {
      "post": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Регистрация пакета с ювелирным изделием",
        "description": "Пользователь регистрирует пакет в заявке.\r\n                     Результат: в системе появился экземпляр сущности \\\"Пакет\\\"\r\n                     типа \\\"Ювелирное изделие\\\",\r\n                     ассоциированный с заявкой, обладающий уникальным номером, признаком системы оценки",
        "requestBody": {
          "description": "Команда регистрации ювелирного изделия",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterJewelryPackageCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterJewelryPackageCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterJewelryPackageCommandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Operation accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found <remarks>  (Заявка не найдена)</remarks>",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/register-multiplestones": {
      "post": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Регистрация пакета с партией камней",
        "description": "Пользователь регистрирует пакет в заявке.\r\n                     Результат: в системе появился экземпляр сущности \\\"Пакет\\\"\r\n                     типа \\\"Партия камней\\\",\r\n                     ассоциированный с заявкой, обладающий уникальным номером, признаком системы оценки",
        "requestBody": {
          "description": "Команда регистрации партии камней",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterMultipleStonesPackageCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterMultipleStonesPackageCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterMultipleStonesPackageCommandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Operation accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found <remarks>  (Заявка не найдена)</remarks>",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/register-singlestone": {
      "post": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Регистрация пакета с одиночным камнем",
        "description": "Пользователь регистрирует пакет в заявке.\r\n                     Результат: в системе появился экземпляр сущности \\\"Пакет\\\"\r\n                     типа \\\"Одиночный камень\\\",\r\n                     ассоциированный с заявкой, обладающий уникальным номером, признаком системы оценки",
        "requestBody": {
          "description": "Команда регистрации одиночного камня",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSingleStonePackageCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSingleStonePackageCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterSingleStonePackageCommandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Operation accepted",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found <remarks>  (Заявка не найдена)</remarks>",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/update-jewelry": {
      "put": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Изменить данные пакета с ювелирным изделием",
        "description": "Пользователь хочет изменить свойства какого-то пакета",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJewelryPackageCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJewelryPackageCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJewelryPackageCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/update-multiplestones": {
      "put": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Изменить данные пакета с партией камней",
        "description": "Пользователь хочет изменить свойства какого-то пакета",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMultipleStonesPackageCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMultipleStonesPackageCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMultipleStonesPackageCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/package/update-singlestone": {
      "put": {
        "tags": [
          "PackageApi"
        ],
        "summary": "Изменить данные пакета с одиночным камнем",
        "description": "Пользователь хочет изменить свойства какого-то пакета",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSingleStonePackageCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSingleStonePackageCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSingleStonePackageCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackageDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/requests": {
      "get": {
        "tags": [
          "RequestApi"
        ],
        "summary": "Получение списка заявок",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsPagedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/requests/{requestId}": {
      "get": {
        "tags": [
          "RequestApi"
        ],
        "summary": "Получение информации по заявке",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Идентификатор заявки",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/requests/create-request": {
      "post": {
        "tags": [
          "RequestApi"
        ],
        "summary": "Регистрация заявки",
        "requestBody": {
          "description": "Команда регистрации заявки",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestCommandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/requests/finalize/{requestId}": {
      "put": {
        "tags": [
          "RequestApi"
        ],
        "summary": "Финализация заявки",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "Идентификатор заявки",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/requests/number/{requestNumber}": {
      "get": {
        "tags": [
          "RequestApi"
        ],
        "summary": "Поиск заявок по номеру",
        "parameters": [
          {
            "name": "PageSize",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CurrentPage",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "requestNumber",
            "in": "path",
            "description": "Номер заявки",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsPagedList"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsPagedList"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetailsPagedList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/requests/update-request": {
      "put": {
        "tags": [
          "RequestApi"
        ],
        "summary": "Изменить данные по заявке",
        "requestBody": {
          "description": "Команда изменения данных по заявке",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/{packageId}/diagnostics-files/{fileName}": {
      "get": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Получить из хранилища файл диагностики по его наименованию",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "description": "Имя файла",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/diagnostics": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Внести данные по диагностике",
        "requestBody": {
          "description": "Модель данных по диагностике",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnosticsCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnosticsCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DiagnosticsCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/diagnostics-files": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Загрузить в хранилище файлы по диагностике",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "PackageId": {
                    "type": "integer",
                    "description": "Идентификатор пакета",
                    "format": "int64"
                  },
                  "Mineral": {
                    "$ref": "#/components/schemas/MineralsEnum"
                  },
                  "Comment": {
                    "type": "string",
                    "description": "Комментарий"
                  },
                  "Files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "загружаемые файлы"
                  }
                }
              },
              "encoding": {
                "PackageId": {
                  "style": "form"
                },
                "Mineral": {
                  "style": "form"
                },
                "Comment": {
                  "style": "form"
                },
                "Files": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Удалить из хранилища файлы по диагностике",
        "requestBody": {
          "description": "Модель удаляемых файлов",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDiagnosticFilesCommandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDiagnosticFilesCommandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDiagnosticFilesCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/diagnostics/finalize/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Завершить работу с диагностикой для пакета. (Диагностика готова)",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/engraving/finalize/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Завершить гравировку пакета. (Гравировка готова)",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/gemology-multiplestones": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Внести результаты геммологической экспертизы для пакета с партией камней",
        "description": "Пользователь хочет изменить раздел \"Оценка. Геммологическая экспертиза\" рабочего листа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GemologyMultipleStonesPackageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GemologyMultipleStonesPackageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GemologyMultipleStonesPackageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/gemology-singlestone": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Внести результаты геммологической экспертизы для пакета с одиночным камнем",
        "description": "Пользователь хочет изменить раздел \"Оценка. Геммологическая экспертиза\" рабочего листа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GemologySingleStonePackageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GemologySingleStonePackageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GemologySingleStonePackageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/gemology/{packageId}": {
      "delete": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Удалить гемологию для пакета",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/gemology/finalize/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Завершить работу с гемологией для пакета. (Гемология готова)",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/helium-measure-singlestone-download/{packageId}": {
      "get": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Скачать файл измерений параметров Helium Polish для пакета с одиночным камнем",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/helium-measure-singlestone-upload/{packageId}": {
      "post": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Загрузить измерения параметров Helium Polish для пакета с одиночным камнем",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/measure-multiplestones": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Внести ручные измерения параметров для пакета с партией камней",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasureMultipleStonesPackageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasureMultipleStonesPackageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MeasureMultipleStonesPackageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/measure-singlestone": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Внести ручные измерения параметров для пакета с одиночным камнем",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasureSingleStonePackageDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/MeasureSingleStonePackageDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/MeasureSingleStonePackageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/measure/{packageId}": {
      "delete": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Удалить измерения параметров для пакета",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/measure/finalize/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Завершить работу с измерениями для пакета. (Измерения готовы)",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/plotting-file/{packageId}": {
      "get": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Получить файл плоттинга",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/plotting/{packageId}": {
      "post": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Добавить плоттинг",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "file": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Удалить плоттинг",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "Идентификатор пакета",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/plotting/finalize/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Завершить плоттинг пакета. (Плоттинг готов)",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-main-media/{packageId}": {
      "get": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Получить основное изображение - результаты съёмки для пакета",
        "description": "Пользователь смотрит раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-other-media/{packageId}": {
      "delete": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Удалить дополнительные файлы - результаты съёмки для пакета",
        "description": "Пользователь хочет изменить раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-other-media/{packageId}/{name}": {
      "get": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Получить дополнительный файл по имени - результаты съёмки для пакета",
        "description": "Пользователь смотрит раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-upload-alt": {
      "post": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Загрузить результаты съёмки для пакета (альтернатива)",
        "description": "Пользователь хочет изменить раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "PackageId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Main": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Other": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "PackageId": {
                  "style": "form"
                },
                "Main": {
                  "style": "form"
                },
                "Other": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-upload-other-media-alt": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Загрузить дополнительные файлы - результаты съёмки для пакета (альтернатива)",
        "description": "Пользователь хочет изменить раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "PackageId": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Other": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "PackageId": {
                  "style": "form"
                },
                "Other": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-upload-other-media/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Загрузить дополнительные файлы - результаты съёмки для пакета",
        "description": "Пользователь хочет изменить раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "other": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "other": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting-upload/{packageId}": {
      "post": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Загрузить результаты съёмки для пакета",
        "description": "Пользователь хочет изменить раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "string",
                    "format": "binary"
                  },
                  "other": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "main": {
                  "style": "form"
                },
                "other": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting/{packageId}": {
      "delete": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Удалить все результаты съёмки для пакета",
        "description": "Пользователь хочет изменить раздел \"Доп. Работы. Съёмка\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/worksheet/shooting/finalize/{packageId}": {
      "put": {
        "tags": [
          "WorksheetApi"
        ],
        "summary": "Завершить съёмку пакета. (Съёмка готова)",
        "description": "Пользователь хочет изменить раздел \"Оценка. Параметры изменения\" рабочего листа",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorksheetDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalWorkScopeDto": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/AdditionalWorkScopeEnum"
          },
          "applicableTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageTypeEnum"
            },
            "description": "Типы пакета, к которым можно применить дополнительное действие.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdditionalWorkScopeEnum": {
        "enum": [
          "Plotting",
          "StandardEngraving",
          "CustomEngraving",
          "Shooting"
        ],
        "type": "string",
        "description": "Перечень работ, которые необходимо будет произвести с пакетом.\n\nPlotting\n\nStandardEngraving\n\nCustomEngraving\n\nShooting",
        "x-enumNames": [
          "Plotting",
          "StandardEngraving",
          "CustomEngraving",
          "Shooting"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          ""
        ]
      },
      "ApplicablePairsDto": {
        "type": "object",
        "properties": {
          "pairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KindTypePair"
            },
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BaseColorEnum": {
        "enum": [
          "Yellow",
          "Blue",
          "Green",
          "Black",
          "Pink",
          "Red",
          "Violet",
          "Brown",
          "Purple",
          "Orange",
          "White",
          "Gray"
        ],
        "type": "string",
        "description": "Основной цвет\n\nYellow\n\nBlue\n\nGreen\n\nBlack\n\nPink\n\nRed\n\nViolet\n\nBrown\n\nPurple\n\nOrange\n\nWhite\n\nGray",
        "x-enumNames": [
          "Yellow",
          "Blue",
          "Green",
          "Black",
          "Pink",
          "Red",
          "Violet",
          "Brown",
          "Purple",
          "Orange",
          "White",
          "Gray"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "CertificateKindEnum": {
        "enum": [
          "BigCertificateKind",
          "SmallCertificateForSingleNaturalKind",
          "ExpertAssessmentKind",
          "CertificateForMultipleKind",
          "CertificateForSingleArtificialKind"
        ],
        "type": "string",
        "description": "Виды (бланков) сертификатов\n\nBigCertificateKind\n\nSmallCertificateForSingleNaturalKind\n\nExpertAssessmentKind\n\nCertificateForMultipleKind\n\nCertificateForSingleArtificialKind",
        "x-enumNames": [
          "BigCertificateKind",
          "SmallCertificateForSingleNaturalKind",
          "ExpertAssessmentKind",
          "CertificateForMultipleKind",
          "CertificateForSingleArtificialKind"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "CertificateTypeEnum": {
        "enum": [
          "BigCertificateOfConformity",
          "SmallCertificateOfConformity",
          "ExpertAssessment",
          "CertificateOfJewelry"
        ],
        "type": "string",
        "description": "\n\nBigCertificateOfConformity\n\nSmallCertificateOfConformity\n\nExpertAssessment\n\nCertificateOfJewelry",
        "x-enumNames": [
          "BigCertificateOfConformity",
          "SmallCertificateOfConformity",
          "ExpertAssessment",
          "CertificateOfJewelry"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          ""
        ]
      },
      "CertificationDocumentDetails": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер документа. Вводится приемщиком при распечатке.\r\nНужно проверять на уникальность.\r\nВ будущем планируется сделать регистрацию сертификата в системе через сканирование кода.",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CertificationTypeEnum"
          },
          "date": {
            "type": "string",
            "description": "Дата выдачи документа. Вводит работник приемщик (или другой пользователь, кот-ый печатает) при печати",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CertificationSystemEnum": {
        "enum": [
          "Russian",
          "Worldwide"
        ],
        "type": "string",
        "description": "Тип сертификации для пакета\n\nRussian\n\nWorldwide",
        "x-enumNames": [
          "Russian",
          "Worldwide"
        ],
        "x-enumDescriptions": [
          "",
          ""
        ]
      },
      "CertificationTypeDto": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/CertificationTypeEnum"
          },
          "applicableTo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageTypeEnum"
            },
            "description": "Типы пакета, к которым можно применить тип сертификата",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CertificationTypeEnum": {
        "enum": [
          "BigCertificateOfConformity",
          "SmallCertificateOfConformity",
          "ExpertAssessment",
          "CertificateOfJewelry"
        ],
        "type": "string",
        "description": "Вид сертификационного документа\n\nBigCertificateOfConformity\n\nSmallCertificateOfConformity\n\nExpertAssessment\n\nCertificateOfJewelry",
        "x-enumNames": [
          "BigCertificateOfConformity",
          "SmallCertificateOfConformity",
          "ExpertAssessment",
          "CertificateOfJewelry"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          ""
        ]
      },
      "ClientDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор клиента",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Наименование клиента",
            "nullable": true
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "ClientTypeEnum": {
        "enum": [
          "Individual",
          "Legal"
        ],
        "type": "string",
        "description": "Тип клиента\n\nIndividual\n\nLegal",
        "x-enumNames": [
          "Individual",
          "Legal"
        ],
        "x-enumDescriptions": [
          "",
          ""
        ]
      },
      "CreateRequestCommandDto": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Номер заявки или доп. соглашения",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "description": "Идентификатор клиента",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "description": "Дата прихода, вводится приемщиком вручную при регистрации",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "DefectCategoryEnum": {
        "enum": [
          "Outer",
          "Inner"
        ],
        "type": "string",
        "description": "Категория дефекта\n\nOuter\n\nInner",
        "x-enumNames": [
          "Outer",
          "Inner"
        ],
        "x-enumDescriptions": [
          "",
          ""
        ]
      },
      "DiagnosticsCommandDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий. Не обязателен для заполнения",
            "nullable": true
          },
          "mineral": {
            "$ref": "#/components/schemas/MineralsEnum"
          }
        },
        "additionalProperties": false
      },
      "DiagnosticsWorkItemDetails": {
        "type": "object",
        "properties": {
          "mineral": {
            "$ref": "#/components/schemas/MineralsEnum"
          },
          "files": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Изображения из Aurora Diamonds.\r\n<remarks>Пользователь прикрепляет одно или более изображений.</remarks>",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Комментарий. В свободной форме.",
            "nullable": true
          },
          "isWorkCompleted": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiamondClarityGiaEnum": {
        "enum": [
          "Fl",
          "IF",
          "VVS",
          "VVS1",
          "VVS2",
          "VS",
          "VS1",
          "VS2",
          "SI",
          "SI1",
          "SI2",
          "I1",
          "I2",
          "I3"
        ],
        "type": "string",
        "description": "Брил.Чистота GIA\n\nFl\n\nIF\n\nVVS\n\nVVS1\n\nVVS2\n\nVS\n\nVS1\n\nVS2\n\nSI\n\nSI1\n\nSI2\n\nI1\n\nI2\n\nI3",
        "x-enumNames": [
          "Flawless",
          "InternallyFlawless",
          "VeryVerySlightlyIncluded",
          "VeryVerySlightlyIncluded1",
          "VeryVerySlightlyIncluded2",
          "VerySlightlyIncluded",
          "VerySlightlyIncluded1",
          "VerySlightlyIncluded2",
          "SlightlyIncluded",
          "SlightlyIncluded1",
          "SlightlyIncluded2",
          "Included1",
          "Included2",
          "Included3"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondClarityRuEnum": {
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "7а",
          "8",
          "9",
          "10",
          "11",
          "12"
        ],
        "type": "string",
        "description": "Брилл.Чистота РФ\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n7а\n\n8\n\n9\n\n10\n\n11\n\n12",
        "x-enumNames": [
          "One",
          "Two",
          "Three",
          "Four",
          "Five",
          "Six",
          "Seven",
          "SevenA",
          "Eight",
          "Nine",
          "Ten",
          "Eleven",
          "Twelve"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondColorGiaEnum": {
        "enum": [
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y",
          "Z"
        ],
        "type": "string",
        "description": "Брил.Цвет GIA\n\nD\n\nE\n\nF\n\nG\n\nH\n\nI\n\nJ\n\nK\n\nL\n\nM\n\nN\n\nO\n\nP\n\nQ\n\nR\n\nS\n\nT\n\nU\n\nV\n\nW\n\nX\n\nY\n\nZ",
        "x-enumNames": [
          "D",
          "E",
          "F",
          "G",
          "H",
          "I",
          "J",
          "K",
          "L",
          "M",
          "N",
          "O",
          "P",
          "Q",
          "R",
          "S",
          "T",
          "U",
          "V",
          "W",
          "X",
          "Y",
          "Z"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondColorRuEnum": {
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "5-1",
          "5-2",
          "5-3",
          "6",
          "6-1",
          "7",
          "8-1",
          "8-2",
          "8-3",
          "8-4",
          "8-5",
          "9",
          "9-1",
          "9-2",
          "9-3",
          "9-4"
        ],
        "type": "string",
        "description": "Брил.Цвет РФ\n\n1\n\n2\n\n3\n\n4\n\n5\n\n5-1\n\n5-2\n\n5-3\n\n6\n\n6-1\n\n7\n\n8-1\n\n8-2\n\n8-3\n\n8-4\n\n8-5\n\n9\n\n9-1\n\n9-2\n\n9-3\n\n9-4",
        "x-enumNames": [
          "One",
          "Two",
          "Three",
          "Four",
          "Five",
          "FiveOne",
          "FiveTwo",
          "FiveThree",
          "Six",
          "SixOne",
          "Seven",
          "EightOne",
          "EightTwo",
          "EightThree",
          "EightFour",
          "EightFive",
          "Nine",
          "NineOne",
          "NineTwo",
          "NineThree",
          "NineFour"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondCuletGiaEnum": {
        "enum": [
          "None",
          "Very Small",
          "Small",
          "Large",
          "Very Large",
          "Nick pointed",
          "Rib Line"
        ],
        "type": "string",
        "description": "Брил.Калетта. Наименование GIA\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondCuletRuEnum\" />\n\nNone\n\nVery Small\n\nSmall\n\nLarge\n\nVery Large\n\nNick pointed\n\nRib Line",
        "x-enumNames": [
          "None",
          "VerySmall",
          "Small",
          "Large",
          "VeryLarge",
          "NickPointed",
          "RibLine"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondCuletRuEnum": {
        "enum": [
          "Шип",
          "Очень маленькая",
          "Маленькая",
          "Большая",
          "Очень большая",
          "Скол шипа",
          "Ребро"
        ],
        "type": "string",
        "description": "Брил.Калетта. Наименование РФ\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondCuletGiaEnum\" />\n\nШип\n\nОчень маленькая\n\nМаленькая\n\nБольшая\n\nОчень большая\n\nСкол шипа\n\nРебро",
        "x-enumNames": [
          "None",
          "VerySmall",
          "Small",
          "Large",
          "VeryLarge",
          "NickPointed",
          "RibLine"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondCuletRuEnumDiamondCuletGiaEnumInterSystemCategorizerItem": {
        "type": "object",
        "properties": {
          "valueRu": {
            "$ref": "#/components/schemas/DiamondCuletRuEnum"
          },
          "valueGia": {
            "$ref": "#/components/schemas/DiamondCuletGiaEnum"
          }
        },
        "additionalProperties": false
      },
      "DiamondCutGiaEnum": {
        "enum": [
          "-",
          "Excellent",
          "Very Good",
          "Good",
          "Fair",
          "Poor"
        ],
        "type": "string",
        "description": "Брил.Огранка (качество). Наименование GIA\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondCutRuEnum\" />\n\n-\n\nExcellent\n\nVery Good\n\nGood\n\nFair\n\nPoor",
        "x-enumNames": [
          "Undefined",
          "Excellent",
          "VeryGood",
          "Good",
          "Fair",
          "Poor"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondCutRuEnum": {
        "enum": [
          "-",
          "Отлично",
          "Очень хорошо",
          "Хорошо",
          "Удовлетворительно",
          "Неудовлетворительно"
        ],
        "type": "string",
        "description": "Брил.Огранка (качество). Наименование РФ\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondCutGiaEnum\" />\n\n-\n\nОтлично\n\nОчень хорошо\n\nХорошо\n\nУдовлетворительно\n\nНеудовлетворительно",
        "x-enumNames": [
          "Undefined",
          "Excellent",
          "VeryGood",
          "Good",
          "Fair",
          "Poor"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondCutRuEnumDiamondCutGiaEnumInterSystemCategorizerItem": {
        "type": "object",
        "properties": {
          "valueRu": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "valueGia": {
            "$ref": "#/components/schemas/DiamondCutGiaEnum"
          }
        },
        "additionalProperties": false
      },
      "DiamondCutStyleGiaEnum": {
        "enum": [
          "Brilliant",
          "Modified",
          "Cut"
        ],
        "type": "string",
        "description": "Брилл.стиль огранки GIA\n\nBrilliant\n\nModified\n\nCut",
        "x-enumNames": [
          "Brilliant",
          "Modified",
          "Cut"
        ],
        "x-enumDescriptions": [
          "",
          "",
          ""
        ]
      },
      "DiamondDefectLookupItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название",
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/DefectCategoryEnum"
          },
          "code": {
            "type": "string",
            "description": "Краткое обозначение",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Дефект"
      },
      "DiamondFantasyColorGia": {
        "type": "object",
        "properties": {
          "baseColor": {
            "$ref": "#/components/schemas/BaseColorEnum"
          },
          "intensity": {
            "$ref": "#/components/schemas/IntensityEnum"
          },
          "shade": {
            "$ref": "#/components/schemas/ShadeEnum"
          },
          "shade2": {
            "$ref": "#/components/schemas/ShadeEnum"
          }
        },
        "additionalProperties": false,
        "description": "Фант.Брил. Цвет GIA"
      },
      "DiamondFantasyColorGiaLookupDto": {
        "type": "object",
        "properties": {
          "baseColors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/BaseColorEnum"
            },
            "nullable": true
          },
          "intensity": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IntensityEnum"
            },
            "nullable": true
          },
          "shades": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ShadeEnum"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DiamondFantasyCutShapeRuEnum": {
        "enum": [
          "Квадратная",
          "Овальная",
          "Сердцевидная",
          "Прямоугольная",
          "Трапециевидная",
          "Грушевидная",
          "Модифицированная",
          "Бриллиантовая",
          "Челновидная",
          "Изометричная",
          "Восьмиугольная",
          "Треугольная",
          "Угловатая"
        ],
        "type": "string",
        "description": "Брилл. форма огранки РФ\r\n<remarks>Ввод доступен только для фантазийных форм</remarks>\n\nКвадратная\n\nОвальная\n\nСердцевидная\n\nПрямоугольная\n\nТрапециевидная\n\nГрушевидная\n\nМодифицированная\n\nБриллиантовая\n\nЧелновидная\n\nИзометричная\n\nВосьмиугольная\n\nТреугольная\n\nУгловатая",
        "x-enumNames": [
          "Square",
          "Oval",
          "Cordate",
          "Rectangular",
          "Trapezoidal",
          "Pear",
          "Modified",
          "Diamond",
          "Marquis",
          "Isometric",
          "Octagonal",
          "Triangular",
          "Angular"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondFluorescenceGiaEnum": {
        "enum": [
          "-",
          "None",
          "Faint",
          "Medium",
          "Strong",
          "Very Strong"
        ],
        "type": "string",
        "description": "Брил. Флю. Наименование GIA\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondFluorescenceRuEnum\" />\n\n-\n\nNone\n\nFaint\n\nMedium\n\nStrong\n\nVery Strong",
        "x-enumNames": [
          "Undefined",
          "None",
          "Faint",
          "Medium",
          "Strong",
          "VeryStrong"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondFluorescenceRuEnum": {
        "enum": [
          "-",
          "Отсутствует",
          "Слабая",
          "Умеренная",
          "Сильная",
          "Очень сильная"
        ],
        "type": "string",
        "description": "Брил.Флю. Наименование РФ\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondFluorescenceGiaEnum\" />\n\n-\n\nОтсутствует\n\nСлабая\n\nУмеренная\n\nСильная\n\nОчень сильная",
        "x-enumNames": [
          "Undefined",
          "None",
          "Faint",
          "Medium",
          "Strong",
          "VeryStrong"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondFluorescenceRuEnumDiamondFluorescenceGiaEnumInterSystemCategorizerItem": {
        "type": "object",
        "properties": {
          "valueRu": {
            "$ref": "#/components/schemas/DiamondFluorescenceRuEnum"
          },
          "valueGia": {
            "$ref": "#/components/schemas/DiamondFluorescenceGiaEnum"
          }
        },
        "additionalProperties": false
      },
      "DiamondPolishGiaEnum": {
        "enum": [
          "-",
          "Excellent",
          "Very Good",
          "Good",
          "Fair",
          "Poor"
        ],
        "type": "string",
        "description": "Брил.Полировка. Наименование GIA\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondPolishRuEnum\" />\n\n-\n\nExcellent\n\nVery Good\n\nGood\n\nFair\n\nPoor",
        "x-enumNames": [
          "Undefined",
          "Excellent",
          "VeryGood",
          "Good",
          "Fair",
          "Poor"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondPolishRuEnum": {
        "enum": [
          "-",
          "Отлично",
          "Очень хорошо",
          "Хорошо",
          "Удовлетворительно",
          "Неудовлетворительно"
        ],
        "type": "string",
        "description": "Брил.Полировка. Наименование РФ\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondPolishGiaEnum\" />\n\n-\n\nОтлично\n\nОчень хорошо\n\nХорошо\n\nУдовлетворительно\n\nНеудовлетворительно",
        "x-enumNames": [
          "Undefined",
          "Excellent",
          "VeryGood",
          "Good",
          "Fair",
          "Poor"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondPolishRuEnumDiamondPolishGiaEnumInterSystemCategorizerItem": {
        "type": "object",
        "properties": {
          "valueRu": {
            "$ref": "#/components/schemas/DiamondPolishRuEnum"
          },
          "valueGia": {
            "$ref": "#/components/schemas/DiamondPolishGiaEnum"
          }
        },
        "additionalProperties": false
      },
      "DiamondShapeGiaEnum": {
        "enum": [
          "Round",
          "Square",
          "Rectangle",
          "Octagonal",
          "Oval",
          "Marquise",
          "Pear",
          "Triangular",
          "Emerald",
          "Baguette"
        ],
        "type": "string",
        "description": "Брилл.Форма наимен-е GIA\n\nRound\n\nSquare\n\nRectangle\n\nOctagonal\n\nOval\n\nMarquise\n\nPear\n\nTriangular\n\nEmerald\n\nBaguette",
        "x-enumNames": [
          "Round",
          "Square",
          "Rectangle",
          "Octagonal",
          "Oval",
          "Marquise",
          "Pear",
          "Triangular",
          "Emerald",
          "Baguette"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondShapeRuDto": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/DiamondShapeRuEnum"
          },
          "isFantasy": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DiamondShapeRuEnum": {
        "enum": [
          "Кр-57",
          "Кр-17",
          "Кр-73",
          "Кр-80",
          "Кр-81",
          "Кр-86",
          "Кр-89",
          "Груша",
          "Маркиз",
          "Овал",
          "Сердце",
          "Багет",
          "Изумруд",
          "Квадрат",
          "Радиант",
          "Подушка",
          "Принцесса",
          "Кушон",
          "Триллиант",
          "Кабашон"
        ],
        "type": "string",
        "description": "Брилл.Форма наимен-е РФ\r\n<seealso cref=\"M:sgc.certification.Domain.Categorizers.CategorizerExtensions.IsFantasy(sgc.certification.Domain.Categorizers.DiamondShapeRuEnum)\" />\n\nКр-57\n\nКр-17\n\nКр-73\n\nКр-80\n\nКр-81\n\nКр-86\n\nКр-89\n\nГруша\n\nМаркиз\n\nОвал\n\nСердце\n\nБагет\n\nИзумруд\n\nКвадрат\n\nРадиант\n\nПодушка\n\nПринцесса\n\nКушон\n\nТриллиант\n\nКабашон",
        "x-enumNames": [
          "Kr57",
          "Kr17",
          "Kr73",
          "Kr80",
          "Kr81",
          "Kr86",
          "Kr89",
          "Pear",
          "Marquis",
          "Oval",
          "Heart",
          "Baguette",
          "Emerald",
          "Square",
          "Radiant",
          "Pillow",
          "Princess",
          "Cushion",
          "Trilliant",
          "Cabochon"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondSymmetryGiaEnum": {
        "enum": [
          "-",
          "Excellent",
          "Very Good",
          "Good",
          "Fair",
          "Poor"
        ],
        "type": "string",
        "description": "Брил.Симметрия. Наименование РФ\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondSymmetryRuEnum\" />\n\n-\n\nExcellent\n\nVery Good\n\nGood\n\nFair\n\nPoor",
        "x-enumNames": [
          "Undefined",
          "Excellent",
          "VeryGood",
          "Good",
          "Fair",
          "Poor"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondSymmetryRuEnum": {
        "enum": [
          "-",
          "Отлично",
          "Очень хорошо",
          "Хорошо",
          "Удовлетворительно",
          "Неудовлетворительно"
        ],
        "type": "string",
        "description": "Брил.Симметрия. Наименование РФ\r\n<seealso cref=\"T:sgc.certification.Domain.Categorizers.DiamondSymmetryGiaEnum\" />\n\n-\n\nОтлично\n\nОчень хорошо\n\nХорошо\n\nУдовлетворительно\n\nНеудовлетворительно",
        "x-enumNames": [
          "Undefined",
          "Excellent",
          "VeryGood",
          "Good",
          "Fair",
          "Poor"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "DiamondSymmetryRuEnumDiamondSymmetryGiaEnumInterSystemCategorizerItem": {
        "type": "object",
        "properties": {
          "valueRu": {
            "$ref": "#/components/schemas/DiamondSymmetryRuEnum"
          },
          "valueGia": {
            "$ref": "#/components/schemas/DiamondSymmetryGiaEnum"
          }
        },
        "additionalProperties": false
      },
      "EngravingDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          }
        ],
        "properties": {
          "totalEngravingText": {
            "type": "string",
            "description": "Текст гравировки",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GemologyDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          }
        ],
        "properties": {
          "origin": {
            "$ref": "#/components/schemas/MineralOriginEnum"
          },
          "externalInfluence": {
            "type": "boolean",
            "description": "Признак внешнего воздействия: да/нет"
          },
          "isFantasyColor": {
            "type": "boolean",
            "description": "Признак фантазийности цвета: да/нет."
          },
          "isFantasyShape": {
            "type": "boolean",
            "description": "Признак фантазийности формы: да/нет."
          },
          "fantasyCutShapeRu": {
            "$ref": "#/components/schemas/DiamondFantasyCutShapeRuEnum"
          },
          "cutStyle": {
            "$ref": "#/components/schemas/DiamondCutStyleGiaEnum"
          },
          "comment": {
            "type": "string",
            "description": "Комметнарий геммолога",
            "nullable": true
          },
          "russian": {
            "$ref": "#/components/schemas/RussianGemologyDetails"
          },
          "worldwide": {
            "$ref": "#/components/schemas/WorldwideGemologyDetails"
          },
          "cut": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "polish": {
            "$ref": "#/components/schemas/DiamondPolishRuEnum"
          },
          "symmetry": {
            "$ref": "#/components/schemas/DiamondSymmetryRuEnum"
          },
          "fluorescence": {
            "$ref": "#/components/schemas/DiamondFluorescenceRuEnum"
          },
          "culet": {
            "$ref": "#/components/schemas/DiamondCuletRuEnum"
          },
          "defects": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Список дефектов с возможностью множественного выбора в соответствии со справочником.",
            "nullable": true
          },
          "cutFrom": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "cutTo": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          }
        },
        "additionalProperties": false
      },
      "GemologyMultipleStonesPackageDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "origin": {
            "$ref": "#/components/schemas/MineralOriginEnum"
          },
          "externalInfluence": {
            "type": "boolean",
            "description": "Признак внешнего воздействия"
          },
          "isFantasyColor": {
            "type": "boolean",
            "description": "Признак фантазийности цвета"
          },
          "isFantasyShape": {
            "type": "boolean",
            "description": "Признак фантазийности формы"
          },
          "cutFrom": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "cutTo": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "fantasyCutShapeRu": {
            "$ref": "#/components/schemas/DiamondFantasyCutShapeRuEnum"
          },
          "clarityRuFrom": {
            "$ref": "#/components/schemas/DiamondClarityRuEnum"
          },
          "clarityRuTo": {
            "$ref": "#/components/schemas/DiamondClarityRuEnum"
          },
          "fantasyColorRu": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          },
          "ordinalColorRuFrom": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          },
          "ordinalColorRuTo": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          },
          "shapeRu": {
            "$ref": "#/components/schemas/DiamondShapeRuEnum"
          },
          "shapeGia": {
            "$ref": "#/components/schemas/DiamondShapeGiaEnum"
          },
          "clarityGiaFrom": {
            "$ref": "#/components/schemas/DiamondClarityGiaEnum"
          },
          "clarityGiaTo": {
            "$ref": "#/components/schemas/DiamondClarityGiaEnum"
          },
          "fantasyColorGia": {
            "$ref": "#/components/schemas/DiamondFantasyColorGia"
          },
          "ordinalColorGiaFrom": {
            "$ref": "#/components/schemas/DiamondColorGiaEnum"
          },
          "ordinalColorGiaTo": {
            "$ref": "#/components/schemas/DiamondColorGiaEnum"
          },
          "cutStyle": {
            "$ref": "#/components/schemas/DiamondCutStyleGiaEnum"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий геммолога. Попадает в сертификат",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GemologySingleStonePackageDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "origin": {
            "$ref": "#/components/schemas/MineralOriginEnum"
          },
          "externalInfluence": {
            "type": "boolean",
            "description": "Признак внешнего воздействия"
          },
          "isFantasyColor": {
            "type": "boolean",
            "description": "Признак фантазийности цвета"
          },
          "isFantasyShape": {
            "type": "boolean",
            "description": "Признак фантазийности формы"
          },
          "cut": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "polish": {
            "$ref": "#/components/schemas/DiamondPolishRuEnum"
          },
          "symmetry": {
            "$ref": "#/components/schemas/DiamondSymmetryRuEnum"
          },
          "fluorescence": {
            "$ref": "#/components/schemas/DiamondFluorescenceRuEnum"
          },
          "culet": {
            "$ref": "#/components/schemas/DiamondCuletRuEnum"
          },
          "fantasyCutShapeRu": {
            "$ref": "#/components/schemas/DiamondFantasyCutShapeRuEnum"
          },
          "clarityRu": {
            "$ref": "#/components/schemas/DiamondClarityRuEnum"
          },
          "colorRu": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          },
          "shapeRu": {
            "$ref": "#/components/schemas/DiamondShapeRuEnum"
          },
          "shapeGia": {
            "$ref": "#/components/schemas/DiamondShapeGiaEnum"
          },
          "clarityGia": {
            "$ref": "#/components/schemas/DiamondClarityGiaEnum"
          },
          "fantasyColorGia": {
            "$ref": "#/components/schemas/DiamondFantasyColorGia"
          },
          "ordinalColorGia": {
            "$ref": "#/components/schemas/DiamondColorGiaEnum"
          },
          "cutStyle": {
            "$ref": "#/components/schemas/DiamondCutStyleGiaEnum"
          },
          "defects": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Список дефектов с возможностью множественного выбора в соответствии со справочником",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "description": "Комментарий геммолога. Попадает в сертификат",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          }
        ],
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "IntensityEnum": {
        "enum": [
          "Fancy Vivid",
          "Fancy Intense",
          "Fancy Deep",
          "Fancy Dark",
          "Fancy",
          "Fancy Light",
          "Light",
          "Very Light",
          "Faint"
        ],
        "type": "string",
        "description": "Интенсивность\n\nFancy Vivid\n\nFancy Intense\n\nFancy Deep\n\nFancy Dark\n\nFancy\n\nFancy Light\n\nLight\n\nVery Light\n\nFaint",
        "x-enumNames": [
          "FancyVivid",
          "FancyIntense",
          "FancyDeep",
          "FancyDark",
          "Fancy",
          "FancyLight",
          "Light",
          "VeryLight",
          "Faint"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "JewelryKindEnum": {
        "enum": [
          "Bracelet",
          "Earrings",
          "Necklace"
        ],
        "type": "string",
        "description": "Вид изделия, вводит приемщик при регистрации пакета (перечень будет дополняться)\n\nBracelet\n\nEarrings\n\nNecklace",
        "x-enumNames": [
          "Bracelet",
          "Earrings",
          "Necklace"
        ],
        "x-enumDescriptions": [
          "",
          "",
          ""
        ]
      },
      "JewelryPackageDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PackageDetails"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "quantity": {
            "type": "integer",
            "description": "количество изделий в пакете, вводит приемщик при регистрации пакета",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "вес ювелирного изделия в граммах, вводит приемщик при регистрации пакета",
            "format": "double"
          },
          "kind": {
            "$ref": "#/components/schemas/JewelryKindEnum"
          }
        },
        "additionalProperties": false
      },
      "KindTypePair": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/CertificateKindEnum"
          },
          "type": {
            "$ref": "#/components/schemas/CertificateTypeEnum"
          }
        },
        "additionalProperties": false
      },
      "MeasureMultipleStonesPackageDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "minDiameterMm": {
            "type": "number",
            "description": "Минимальный диаметр, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "maxDiameterMm": {
            "type": "number",
            "description": "Максимальный диаметр, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "minHeightMm": {
            "type": "number",
            "description": "Минимальная высота, мм. Мин = 0.00, Макс = 100.00",
            "format": "double"
          },
          "maxHeightMm": {
            "type": "number",
            "description": "Максимальная высота, мм. Мин = 0.00, Макс = 100.00",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "MeasureSingleStonePackageDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "minDiameterMm": {
            "type": "number",
            "description": "Минимальный диаметр, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "maxDiameterMm": {
            "type": "number",
            "description": "Максимальный диаметр, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "totalHeightMm": {
            "type": "number",
            "description": "Общая высота, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "totalDepthPt": {
            "type": "number",
            "description": "Общая высота, %. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "tableSizePt": {
            "type": "number",
            "description": "Размер площадки, %.\tМин = 0.00, макс = 100.00",
            "format": "double"
          },
          "crownHeightPt": {
            "type": "number",
            "description": "Высота короны, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "pavilionDepthPt": {
            "type": "number",
            "description": "Глубина павильона, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "girdleThicknessPt": {
            "type": "number",
            "description": "Высота рундиста, %.\tМин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "crownAngleDg": {
            "type": "number",
            "description": "Угол короны, град. Мин = 0.00, макс = 90.00",
            "format": "double",
            "nullable": true
          },
          "pavilionAngleDg": {
            "type": "number",
            "description": "Угол павильона, град. Мин = 0.00, макс = 90.00",
            "format": "double",
            "nullable": true
          },
          "lowerHalfLengthPt": {
            "type": "number",
            "description": "Высота клиньев низа, %.\tМин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "starLengthPt": {
            "type": "number",
            "description": "Высота клиньев верха, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeasurementDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          }
        ],
        "properties": {
          "minDiameterMm": {
            "type": "number",
            "description": "Минимальный диаметр, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "maxDiameterMm": {
            "type": "number",
            "description": "Максимальный диаметр, мм. Мин = 0.00, макс = 100.00",
            "format": "double"
          },
          "totalHeightMm": {
            "type": "number",
            "description": "Общая высота, мм. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "totalDepthPt": {
            "type": "number",
            "description": "Общая высота, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "tableSizePt": {
            "type": "number",
            "description": "Размер площадки, %.\tМин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "crownHeightPt": {
            "type": "number",
            "description": "Высота короны, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "pavilionDepthPt": {
            "type": "number",
            "description": "Глубина павильона, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "girdleThicknessPt": {
            "type": "number",
            "description": "Высота рундиста, %.\tМин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "crownAngleDg": {
            "type": "number",
            "description": "Угол короны, град. Мин = 0.00, макс = 90.00",
            "format": "double",
            "nullable": true
          },
          "pavilionAngleDg": {
            "type": "number",
            "description": "Угол павильона, град. Мин = 0.00, макс = 90.00",
            "format": "double",
            "nullable": true
          },
          "lowerHalfLengthPt": {
            "type": "number",
            "description": "Высота клиньев низа, %.\tМин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "starLengthPt": {
            "type": "number",
            "description": "Высота клиньев верха, %. Мин = 0.00, макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "minHeightMm": {
            "type": "number",
            "description": "Минимальная высота, мм. Мин = 0.00, Макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "maxHeightMm": {
            "type": "number",
            "description": "Максимальная высота, мм. Мин = 0.00, Макс = 100.00",
            "format": "double",
            "nullable": true
          },
          "fileIdentity": {
            "type": "string",
            "nullable": true
          },
          "cutRaw": {
            "$ref": "#/components/schemas/DiamondCutRuEnum"
          },
          "symmetryRaw": {
            "$ref": "#/components/schemas/DiamondSymmetryRuEnum"
          },
          "hasFantasyShapeRaw": {
            "type": "boolean",
            "description": "Фантазийность формы (предварительная) (да/нет)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MineralLookupItemDto": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/MineralsEnum"
          },
          "preciosity": {
            "$ref": "#/components/schemas/PreciosityEnum"
          }
        },
        "additionalProperties": false
      },
      "MineralOriginEnum": {
        "enum": [
          "Natural",
          "Artificial"
        ],
        "type": "string",
        "description": "Происхождение минералов\n\nNatural\n\nArtificial",
        "x-enumNames": [
          "Natural",
          "Artificial"
        ],
        "x-enumDescriptions": [
          "",
          ""
        ]
      },
      "MineralsEnum": {
        "enum": [
          "Brilliant"
        ],
        "type": "string",
        "description": "Виды минералов\n\nBrilliant",
        "x-enumNames": [
          "Brilliant"
        ],
        "x-enumDescriptions": [
          ""
        ]
      },
      "MultipleStonesPackageDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PackageDetails"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "weightFact": {
            "type": "number",
            "description": "Вес фактический, ct",
            "format": "double"
          },
          "weightPlan": {
            "type": "number",
            "description": "Вес заявленный, ct",
            "format": "double"
          },
          "quantityFact": {
            "type": "integer",
            "description": "Фактическое количество камней",
            "format": "int32"
          },
          "quantityPlan": {
            "type": "integer",
            "description": "Заявленное количество камней",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PackageBriefDetails": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "requestId": {
            "type": "integer",
            "format": "int64"
          },
          "state": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "quantityFact": {
            "type": "integer",
            "format": "int32"
          },
          "weightFact": {
            "type": "number",
            "format": "double"
          },
          "additionalWorkScope": {
            "$ref": "#/components/schemas/AdditionalWorkScopeEnum"
          },
          "worksheet": {
            "$ref": "#/components/schemas/WorksheetDetails"
          }
        },
        "additionalProperties": false
      },
      "PackageBriefDetailsPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageBriefDetails"
            },
            "nullable": true
          },
          "paginationInfo": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "PackageContainerEnum": {
        "enum": [
          "Blister",
          "PaperBag"
        ],
        "type": "string",
        "description": "Упаковка, в которой объект сертификации отдадут клиенту\n\nBlister\n\nPaperBag",
        "x-enumNames": [
          "Blister",
          "PaperBag"
        ],
        "x-enumDescriptions": [
          "",
          ""
        ]
      },
      "PackageCutEnum": {
        "enum": [
          "Fantasy",
          "Round"
        ],
        "type": "string",
        "description": "Вид огранки камней в пакете, не имеет отношения непосредственно к оценке,\r\nнужно для фиксации в печатном документе Заявки\n\nFantasy\n\nRound",
        "x-enumNames": [
          "Fantasy",
          "Round"
        ],
        "x-enumDescriptions": [
          "",
          ""
        ]
      },
      "PackageDetails": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета, уникальный, формируется системой.",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "description": "Номер пакета, уникальный, формируется системой.\r\nВ будущем номер должен будет переноситься на QR или штрих-код для нанесения на физический пакет.",
            "format": "int64"
          },
          "requestId": {
            "type": "integer",
            "description": "Идентификатор заявки",
            "format": "int64"
          },
          "certificationSystem": {
            "$ref": "#/components/schemas/CertificationSystemEnum"
          },
          "additionalWorkScope": {
            "$ref": "#/components/schemas/AdditionalWorkScopeEnum"
          },
          "cut": {
            "$ref": "#/components/schemas/PackageCutEnum"
          },
          "type": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "certificationDocumentType": {
            "$ref": "#/components/schemas/CertificationTypeEnum"
          },
          "state": {
            "$ref": "#/components/schemas/StateEnum"
          },
          "container": {
            "$ref": "#/components/schemas/PackageContainerEnum"
          },
          "certificationDocument": {
            "$ref": "#/components/schemas/CertificationDocumentDetails"
          }
        },
        "additionalProperties": false
      },
      "PackageTypeEnum": {
        "enum": [
          "SingleStone",
          "MultipleStones",
          "Jewelry"
        ],
        "type": "string",
        "description": "Тип пакета, выбирает приемщик при регистрации пакета.\n\nSingleStone\n\nMultipleStones\n\nJewelry",
        "x-enumNames": [
          "SingleStone",
          "MultipleStones",
          "Jewelry"
        ],
        "x-enumDescriptions": [
          "",
          "",
          ""
        ]
      },
      "PaginationInfo": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PlottingDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          }
        ],
        "properties": {
          "fileIdentity": {
            "type": "string",
            "description": "Наименование файла плоттинга",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PreciosityEnum": {
        "enum": [
          "NonPrecious",
          "SemiPrecious",
          "Precious"
        ],
        "type": "string",
        "description": "Драгоценность\n\nNonPrecious\n\nSemiPrecious\n\nPrecious",
        "x-enumNames": [
          "NonPrecious",
          "SemiPrecious",
          "Precious"
        ],
        "x-enumDescriptions": [
          "",
          "",
          ""
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RegisterCertificationDocumentDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "documentNumber": {
            "type": "string",
            "description": "Номер документа. Вводится приемщиком при распечатке.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterJewelryPackageCommandDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterPackageCommandDtoBase"
          }
        ],
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "количество изделий в пакете, вводит приемщик при регистрации пакета",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "вес ювелирного изделия в граммах, вводит приемщик при регистрации пакета",
            "format": "double"
          },
          "kind": {
            "$ref": "#/components/schemas/JewelryKindEnum"
          }
        },
        "additionalProperties": false
      },
      "RegisterMultipleStonesPackageCommandDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterPackageCommandDtoBase"
          }
        ],
        "properties": {
          "weightFact": {
            "type": "number",
            "description": "Вес фактический, ct",
            "format": "double"
          },
          "weightPlan": {
            "type": "number",
            "description": "Вес заявленный, ct",
            "format": "double"
          },
          "quantityFact": {
            "type": "integer",
            "description": "Фактическое количество камней",
            "format": "int32"
          },
          "quantityPlan": {
            "type": "integer",
            "description": "Заявленное количество камней",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterPackageCommandDtoBase": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "description": "Идентификатор заявки",
            "format": "int64"
          },
          "cut": {
            "$ref": "#/components/schemas/PackageCutEnum"
          },
          "certificationSystem": {
            "$ref": "#/components/schemas/CertificationSystemEnum"
          },
          "certificationDocumentType": {
            "$ref": "#/components/schemas/CertificationTypeEnum"
          },
          "container": {
            "$ref": "#/components/schemas/PackageContainerEnum"
          },
          "additionalWorkScope": {
            "$ref": "#/components/schemas/AdditionalWorkScopeEnum"
          }
        },
        "additionalProperties": false
      },
      "RegisterSingleStonePackageCommandDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/RegisterPackageCommandDtoBase"
          }
        ],
        "properties": {
          "weightFact": {
            "type": "number",
            "description": "Вес фактический, ct",
            "format": "double"
          },
          "weightPlan": {
            "type": "number",
            "description": "Вес заявленный, ct",
            "format": "double"
          },
          "customEngravingText": {
            "type": "string",
            "description": "Текст для кастомной гравировки. Должен быть задан только в том случае, если в перечне работ с пакетом\r\nsgc.certification.Application.Commands.Packages.Register.RegisterPackageCommandBase.AdditionalWorkScope  присутствует кастомная гравировка\r\nsgc.certification.Domain.Packages.AdditionalWorkScopeEnum.CustomEngraving",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoveDiagnosticFilesCommandDto": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "mineral": {
            "$ref": "#/components/schemas/MineralsEnum"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий",
            "nullable": true
          },
          "fileNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Удаляемые файлы",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор заявки",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "description": "Дата прихода, вводится приемщиком вручную при регистрации",
            "format": "date-time"
          },
          "client": {
            "$ref": "#/components/schemas/ClientDetails"
          },
          "state": {
            "$ref": "#/components/schemas/RequestStateEnum"
          },
          "number": {
            "type": "string",
            "description": "Номер заявки или доп. соглашения",
            "nullable": true
          },
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestDetailsPagedList": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestDetails"
            },
            "nullable": true
          },
          "paginationInfo": {
            "$ref": "#/components/schemas/PaginationInfo"
          }
        },
        "additionalProperties": false
      },
      "RequestStateEnum": {
        "enum": [
          "New",
          "InWork",
          "Done"
        ],
        "type": "string",
        "description": "Статус заявки.\r\n  'Новый' - после регистрации.\r\n  'В работе' - после того как хотя бы 1 пакет заявки будет направлен в работу.\r\n  'Закрыт' - после того как все пакеты заявки закрыты.\n\nNew\n\nInWork\n\nDone",
        "x-enumNames": [
          "New",
          "InWork",
          "Done"
        ],
        "x-enumDescriptions": [
          "",
          "",
          ""
        ]
      },
      "RussianGemologyDetails": {
        "type": "object",
        "properties": {
          "shape": {
            "$ref": "#/components/schemas/DiamondShapeRuEnum"
          },
          "clarity": {
            "$ref": "#/components/schemas/DiamondClarityRuEnum"
          },
          "clarityFrom": {
            "$ref": "#/components/schemas/DiamondClarityRuEnum"
          },
          "clarityTo": {
            "$ref": "#/components/schemas/DiamondClarityRuEnum"
          },
          "color": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          },
          "colorFrom": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          },
          "colorTo": {
            "$ref": "#/components/schemas/DiamondColorRuEnum"
          }
        },
        "additionalProperties": false,
        "description": "Если система оценки РФ"
      },
      "ShadeEnum": {
        "enum": [
          "Yellowish",
          "Bluish",
          "Greenish",
          "Blackish",
          "Pinkish",
          "Reddish",
          "Violetish",
          "Brownish",
          "Purplish",
          "Orange",
          "Whitish",
          "Grayish"
        ],
        "type": "string",
        "description": "Оттенок\n\nYellowish\n\nBluish\n\nGreenish\n\nBlackish\n\nPinkish\n\nReddish\n\nVioletish\n\nBrownish\n\nPurplish\n\nOrange\n\nWhitish\n\nGrayish",
        "x-enumNames": [
          "Yellowish",
          "Bluish",
          "Greenish",
          "Blackish",
          "Pinkish",
          "Reddish",
          "Violetish",
          "Brownish",
          "Purplish",
          "Orange",
          "Whitish",
          "Grayish"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          "",
          ""
        ]
      },
      "ShootingDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          }
        ],
        "properties": {
          "mainPicture": {
            "type": "string",
            "nullable": true
          },
          "otherMedia": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SingleStonePackageDetails": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/PackageDetails"
          }
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "customEngravingText": {
            "type": "string",
            "description": "Текст для кастомной гравировки.",
            "nullable": true
          },
          "weightFact": {
            "type": "number",
            "description": "Фактический вес камня в пакете в каратах, вводит приемщик при регистрации пакета",
            "format": "double"
          },
          "weightPlan": {
            "type": "number",
            "description": "Заявленный клиентом вес камня в пакете в каратах, совпадает с фактическим,\r\nесли приемщик не указал иное при регистрации пакета",
            "format": "double"
          },
          "quantityFact": {
            "type": "integer",
            "description": "Фактическое количество камней",
            "format": "int32",
            "readOnly": true
          },
          "quantityPlan": {
            "type": "integer",
            "description": "Заявленное количество камней",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "StateEnum": {
        "enum": [
          "InWork",
          "ExpertiseDone",
          "CertificatePrinted",
          "Done"
        ],
        "type": "string",
        "description": "Статус пакета, при создании сразу \\\"В работе\\\", \\\"Закрыт\\\" после закрытия приемщиком\n\nInWork\n\nExpertiseDone\n\nCertificatePrinted\n\nDone",
        "x-enumNames": [
          "InWork",
          "ExpertiseDone",
          "CertificatePrinted",
          "Done"
        ],
        "x-enumDescriptions": [
          "",
          "",
          "",
          ""
        ]
      },
      "TypeKindCertificateRequestDto": {
        "type": "object",
        "properties": {
          "packageType": {
            "$ref": "#/components/schemas/PackageTypeEnum"
          },
          "origin": {
            "$ref": "#/components/schemas/MineralOriginEnum"
          },
          "mineral": {
            "$ref": "#/components/schemas/MineralsEnum"
          }
        },
        "additionalProperties": false
      },
      "UpdateJewelryPackageCommandDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdatePackageCommandDtoBase"
          }
        ],
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "количество изделий в пакете",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "description": "вес ювелирного изделия в граммах",
            "format": "double"
          },
          "kind": {
            "$ref": "#/components/schemas/JewelryKindEnum"
          }
        },
        "additionalProperties": false
      },
      "UpdateMultipleStonesPackageCommandDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdatePackageCommandDtoBase"
          }
        ],
        "properties": {
          "weightFact": {
            "type": "number",
            "description": "Вес фактический, ct",
            "format": "double"
          },
          "weightPlan": {
            "type": "number",
            "description": "Вес заявленный, ct",
            "format": "double"
          },
          "quantityFact": {
            "type": "integer",
            "description": "Фактическое количество камней",
            "format": "int32"
          },
          "quantityPlan": {
            "type": "integer",
            "description": "Заявленное количество камней",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdatePackageCommandDtoBase": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Идентификатор пакета",
            "format": "int64"
          },
          "cut": {
            "$ref": "#/components/schemas/PackageCutEnum"
          },
          "certificationSystem": {
            "$ref": "#/components/schemas/CertificationSystemEnum"
          },
          "additionalWorkScope": {
            "$ref": "#/components/schemas/AdditionalWorkScopeEnum"
          },
          "certificationDocumentType": {
            "$ref": "#/components/schemas/CertificationTypeEnum"
          },
          "container": {
            "$ref": "#/components/schemas/PackageContainerEnum"
          }
        },
        "additionalProperties": false
      },
      "UpdateRequestCommandDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор заявки",
            "format": "int64"
          },
          "number": {
            "type": "string",
            "description": "Номер заявки или доп. соглашения",
            "nullable": true
          },
          "clientId": {
            "type": "integer",
            "description": "Идентификатор клиента",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "description": "Дата прихода, вводится приемщиком вручную при регистрации",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "UpdateSingleStonePackageCommandDto": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdatePackageCommandDtoBase"
          }
        ],
        "properties": {
          "weightFact": {
            "type": "number",
            "description": "Вес фактический, ct",
            "format": "double"
          },
          "weightPlan": {
            "type": "number",
            "description": "Вес заявленный, ct",
            "format": "double"
          },
          "customEngravingText": {
            "type": "string",
            "description": "Текст для кастомной гравировки. Должен быть задан только в том случае, если в перечне работ с пакетом",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkItemDetailsBase": {
        "type": "object",
        "properties": {
          "isWorkCompleted": {
            "type": "boolean"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WorkItemDetailsCollection": {
        "type": "object",
        "properties": {
          "gemology": {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          },
          "measurement": {
            "$ref": "#/components/schemas/WorkItemDetailsBase"
          },
          "diagnostics": {
            "$ref": "#/components/schemas/DiagnosticsWorkItemDetails"
          },
          "engraving": {
            "$ref": "#/components/schemas/EngravingDetails"
          },
          "shooting": {
            "$ref": "#/components/schemas/ShootingDetails"
          },
          "plotting": {
            "$ref": "#/components/schemas/PlottingDetails"
          }
        },
        "additionalProperties": false
      },
      "WorksheetDetails": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "format": "int64"
          },
          "packageNumber": {
            "type": "integer",
            "description": "Номер пакета",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "description": "Дата передачи в работу",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "Дата закрытия, дата завершения работы над пакетом",
            "format": "date-time",
            "nullable": true
          },
          "workItems": {
            "$ref": "#/components/schemas/WorkItemDetailsCollection"
          }
        },
        "additionalProperties": false
      },
      "WorldwideGemologyDetails": {
        "type": "object",
        "properties": {
          "shape": {
            "$ref": "#/components/schemas/DiamondShapeGiaEnum"
          },
          "clarity": {
            "$ref": "#/components/schemas/DiamondClarityGiaEnum"
          },
          "clarityFrom": {
            "$ref": "#/components/schemas/DiamondClarityGiaEnum"
          },
          "clarityTo": {
            "$ref": "#/components/schemas/DiamondClarityGiaEnum"
          },
          "color": {
            "description": "Мутабельное поле\r\n(sgc.certification.Domain.Categorizers.DiamondColorGiaEnum - Регулярный цвет по международной системе)\r\n(sgc.certification.Application.Commands.Worksheets.DiamondFantasyColorGiaDto -  Фантазийный цвет по международной системе.\r\nИнтенсивность + основной цвет + оттенки, обязателен только основной цвет)",
            "nullable": true
          },
          "colorFrom": {
            "$ref": "#/components/schemas/DiamondColorGiaEnum"
          },
          "colorTo": {
            "$ref": "#/components/schemas/DiamondColorGiaEnum"
          }
        },
        "additionalProperties": false,
        "description": "Если международная система оценки"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Put your JWT Bearer token **_WITHOUT_** Bearer prefix",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}